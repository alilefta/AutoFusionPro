// <auto-generated />
using System;
using AutoFusionPro.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoFusionPro.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("AutoFusionPro.Domain.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValues")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BodyTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8050),
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8052),
                            Name = "SUV (Sport Utility Vehicle)"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8054),
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8057),
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8059),
                            Name = "Convertible"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8061),
                            Name = "Minivan"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8063),
                            Name = "Truck (Pickup)"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8065),
                            Name = "Wagon (Estate)"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.CompatibleVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BodyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EngineTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TransmissionTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrimLevelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VIN")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("YearEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearStart")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("EngineTypeId");

                    b.HasIndex("TransmissionTypeId");

                    b.HasIndex("TrimLevelId");

                    b.HasIndex("VIN")
                        .IsUnique()
                        .HasFilter("[VIN] IS NOT NULL");

                    b.HasIndex("ModelId", "YearStart", "YearEnd", "TrimLevelId", "TransmissionTypeId", "EngineTypeId", "BodyTypeId")
                        .IsUnique()
                        .HasDatabaseName("IX_CompatibleVehicle_UniqueSpec");

                    b.ToTable("CompatibleVehicles", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.EngineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EngineTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "I4_GAS",
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8120),
                            Name = "Gasoline - Inline 4 (I4)"
                        },
                        new
                        {
                            Id = 2,
                            Code = "V6_GAS",
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8122),
                            Name = "Gasoline - V6"
                        },
                        new
                        {
                            Id = 3,
                            Code = "I4_DSL",
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8125),
                            Name = "Diesel - Inline 4 (I4)"
                        },
                        new
                        {
                            Id = 4,
                            Code = "ELEC",
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8127),
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 5,
                            Code = "HYB",
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8129),
                            Name = "Hybrid"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Makes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Makes/Nissan.jpg",
                            Name = "نيسان"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Makes/Toyota.png",
                            Name = "تويوتا"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Makes/Kia.jpg",
                            Name = "كيا"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Makes/Hyundai.png",
                            Name = "هيونداي"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("MakeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MakeId", "Name")
                        .IsUnique();

                    b.ToTable("Models", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Altima.png",
                            MakeId = 1,
                            Name = "التيما"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Rogue.png",
                            MakeId = 1,
                            Name = "روج"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Sentra.png",
                            MakeId = 1,
                            Name = "سنترا"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Sunny.jpg",
                            MakeId = 1,
                            Name = "صني"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Kicks.jpg",
                            MakeId = 1,
                            Name = "كيكس"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Maxima.png",
                            MakeId = 1,
                            Name = "ماكزيما"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ImagePath = "pack://application:,,,/AutoFusionPro.UI;component/Assets/VehicleStructure/Models/Qashqqai.png",
                            MakeId = 1,
                            Name = "قاشقاي"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TransmissionTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7984),
                            Name = "Automatic"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7987),
                            Name = "Manual"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7989),
                            Name = "CVT (Continuously Variable Transmission)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7991),
                            Name = "Semi-Automatic"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7993),
                            Name = "Dual-Clutch (DCT)"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TrimLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelId", "Name")
                        .IsUnique();

                    b.ToTable("TrimLevels", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 1,
                            Name = "S"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 1,
                            Name = "SV"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 1,
                            Name = "SR"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 1,
                            Name = "SL"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 1,
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 3,
                            Name = "S"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 3,
                            Name = "SV"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 3,
                            Name = "SR"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 2,
                            Name = "S"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 2,
                            Name = "SV"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 2,
                            Name = "SL"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 4,
                            Name = "S"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 4,
                            Name = "SV"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 4,
                            Name = "SL"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "S"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "SV"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "SL"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "SR"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(7360),
                            ModelId = 6,
                            Name = "Platinum Reserve"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CreditLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CurrentBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DiscountPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsWholesale")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.InventoryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NewQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviousQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransactionType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("TransactionDate");

                    b.HasIndex("TransactionType");

                    b.HasIndex("UserId");

                    b.ToTable("InventoryTransactions", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DueDate");

                    b.HasIndex("InvoiceDate");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PartId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RelatedEntityId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsRead");

                    b.HasIndex("Role");

                    b.HasIndex("Timestamp");

                    b.HasIndex("Type");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderDate");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DiscountPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantitySold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("UnitOfMeasureId");

                    b.HasIndex("OrderId", "PartId")
                        .IsUnique();

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOriginal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastRestockDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MinimumStock")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PurchaseConversionFactor")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("PurchaseUnitOfMeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SalesConversionFactor")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("SalesUnitOfMeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockingUnitOfMeasureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PartNumber")
                        .IsUnique();

                    b.HasIndex("PurchaseUnitOfMeasureId");

                    b.HasIndex("SalesUnitOfMeasureId");

                    b.HasIndex("StockingUnitOfMeasureId");

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.PartCompatibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompatibleVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompatibleVehicleId");

                    b.HasIndex("PartId", "CompatibleVehicleId")
                        .IsUnique();

                    b.ToTable("PartCompatibilities", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ShippingCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseDate");

                    b.HasIndex("PurchaseNumber")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.ToTable("Purchases", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.PurchaseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityOrdered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("PurchaseItems", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.SupplierPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPreferredSupplier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeadTimeInDays")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumOrderQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SupplierPartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("SupplierId", "PartId")
                        .IsUnique();

                    b.ToTable("SupplierParts", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Symbol")
                        .IsUnique();

                    b.ToTable("UnitOfMeasures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8177),
                            Name = "Piece",
                            Symbol = "pcs"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8180),
                            Name = "Liter",
                            Symbol = "L"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8183),
                            Name = "Kilogram",
                            Symbol = "kg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8186),
                            Name = "Box",
                            Symbol = "box"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8188),
                            Name = "Meter",
                            Symbol = "m"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8191),
                            Name = "Pair",
                            Symbol = "pr"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 11, 44, 173, DateTimeKind.Utc).AddTicks(8194),
                            Name = "Set",
                            Symbol = "set"
                        });
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreferredLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityAnswerHash")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityQuestion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoFactorSecret")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("User");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("LastLoginDate");

                    b.HasIndex("UserRole");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AskingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BodyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DriveType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EngineTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExteriorColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FeaturesList")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FuelType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GeneralNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("InteriorColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MakeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MileageUnit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumberOfDoors")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegistrationCountryOrState")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RegistrationExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegistrationPlateNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SoldDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SoldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SoldToCustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TransmissionTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrimLevelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VIN")
                        .HasMaxLength(17)
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("EngineTypeId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SoldToCustomerId");

                    b.HasIndex("TransmissionTypeId");

                    b.HasIndex("TrimLevelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleDamageLogId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleDamageLogId");

                    b.ToTable("VehicleDamageImages", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ActualRepairCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateNoted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("EstimatedRepairCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsRepaired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepairNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RepairedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleDamageLogs", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleDocuments", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleImages", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MileageAtService")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleServiceHistories", (string)null);
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.AuditLog", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Category", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Category", "ParentCategory")
                        .WithMany("Subcategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.CompatibleVehicle", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.BodyType", "BodyType")
                        .WithMany("CompatibleVehicleSpecs")
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.EngineType", "EngineType")
                        .WithMany("CompatibleVehicleSpecs")
                        .HasForeignKey("EngineTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", "Model")
                        .WithMany("CompatibleVehicleSpecs")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TransmissionType", "TransmissionType")
                        .WithMany("CompatibleVehicleSpecs")
                        .HasForeignKey("TransmissionTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TrimLevel", "TrimLevel")
                        .WithMany("CompatibleVehicleSpecs")
                        .HasForeignKey("TrimLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BodyType");

                    b.Navigation("EngineType");

                    b.Navigation("Model");

                    b.Navigation("TransmissionType");

                    b.Navigation("TrimLevel");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TrimLevel", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", "Model")
                        .WithMany("TrimLevels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.InventoryTransaction", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("InventoryTransactions")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("InventoryTransactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Invoice", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.InvoiceItem", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Order", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.OrderItem", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("OrderItems")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Part");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Part", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Category", "Category")
                        .WithMany("Parts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.UnitOfMeasure", "PurchaseUnitOfMeasure")
                        .WithMany("PartsPurchaseUnit")
                        .HasForeignKey("PurchaseUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoFusionPro.Domain.Models.UnitOfMeasure", "SalesUnitOfMeasure")
                        .WithMany("PartsSalesUnit")
                        .HasForeignKey("SalesUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoFusionPro.Domain.Models.UnitOfMeasure", "StockingUnitOfMeasure")
                        .WithMany("PartsStockingUnit")
                        .HasForeignKey("StockingUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PurchaseUnitOfMeasure");

                    b.Navigation("SalesUnitOfMeasure");

                    b.Navigation("StockingUnitOfMeasure");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.PartCompatibility", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.CompatibleVehicle", "CompatibleVehicle")
                        .WithMany("PartCompatibilities")
                        .HasForeignKey("CompatibleVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("CompatibleVehicles")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompatibleVehicle");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Payment", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("ProcessedPayments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Purchase", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Supplier", "Supplier")
                        .WithMany("Purchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.PurchaseItem", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("PartPurchaseItems")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Purchase", "Purchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Purchase");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.SupplierPart", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.Part", "Part")
                        .WithMany("Suppliers")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Supplier", "Supplier")
                        .WithMany("Parts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.BodyType", "BodyType")
                        .WithMany()
                        .HasForeignKey("BodyTypeId");

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.EngineType", "EngineType")
                        .WithMany()
                        .HasForeignKey("EngineTypeId");

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Make", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoFusionPro.Domain.Models.Customer", "SoldToCustomer")
                        .WithMany()
                        .HasForeignKey("SoldToCustomerId");

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TransmissionType", "TransmissionType")
                        .WithMany()
                        .HasForeignKey("TransmissionTypeId");

                    b.HasOne("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TrimLevel", "TrimLevel")
                        .WithMany()
                        .HasForeignKey("TrimLevelId");

                    b.Navigation("BodyType");

                    b.Navigation("EngineType");

                    b.Navigation("Make");

                    b.Navigation("Model");

                    b.Navigation("SoldToCustomer");

                    b.Navigation("TransmissionType");

                    b.Navigation("TrimLevel");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageImage", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageLog", "VehicleDamageLog")
                        .WithMany("DamageImages")
                        .HasForeignKey("VehicleDamageLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleDamageLog");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageLog", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", "Vehicle")
                        .WithMany("DamageLogs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDocument", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", "Vehicle")
                        .WithMany("Documents")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleImage", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", "Vehicle")
                        .WithMany("Images")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleServiceHistory", b =>
                {
                    b.HasOne("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", "Vehicle")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Category", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.BodyType", b =>
                {
                    b.Navigation("CompatibleVehicleSpecs");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.CompatibleVehicle", b =>
                {
                    b.Navigation("PartCompatibilities");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.EngineType", b =>
                {
                    b.Navigation("CompatibleVehicleSpecs");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Make", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.Model", b =>
                {
                    b.Navigation("CompatibleVehicleSpecs");

                    b.Navigation("TrimLevels");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TransmissionType", b =>
                {
                    b.Navigation("CompatibleVehicleSpecs");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.CompatibleVehicleModels.TrimLevel", b =>
                {
                    b.Navigation("CompatibleVehicleSpecs");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Part", b =>
                {
                    b.Navigation("CompatibleVehicles");

                    b.Navigation("InventoryTransactions");

                    b.Navigation("InvoiceItems");

                    b.Navigation("OrderItems");

                    b.Navigation("PartPurchaseItems");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.Supplier", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.UnitOfMeasure", b =>
                {
                    b.Navigation("PartsPurchaseUnit");

                    b.Navigation("PartsSalesUnit");

                    b.Navigation("PartsStockingUnit");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("InventoryTransactions");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("ProcessedPayments");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.Vehicle", b =>
                {
                    b.Navigation("DamageLogs");

                    b.Navigation("Documents");

                    b.Navigation("Images");

                    b.Navigation("ServiceRecords");
                });

            modelBuilder.Entity("AutoFusionPro.Domain.Models.VehiclesInventory.VehicleDamageLog", b =>
                {
                    b.Navigation("DamageImages");
                });
#pragma warning restore 612, 618
        }
    }
}
